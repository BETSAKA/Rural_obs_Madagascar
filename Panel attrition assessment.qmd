---
title: "Assessing panel attrition by observatory"
author: "Florent Bédécarrats"
format:
  html:
    
    toc: true
    output-file: index.html
    embed-resources: true
    standalone: true
    code-fold: true
execute:
  warning: false
  error: false
editor: visual
editor_options: 
  chunk_output_type: console
---

## Loading data

```{r load_libraries}
library(tidyverse)    # A series of packages for data manipulation
library(haven)        # Required for reading STATA files (.dta)
library(labelled)     # To work with labelled data from STATA
library(sf)           # for spatial data handling
library(tidyverse)    # for data wrangling and visualization
library(gt)           # for nicely formatted tables
library(cowplot)      # to combine plots
library(gtsummary)    # to produce nice summary tables
```

```{r}
# Set the base directory
base_dir <- "Données ROR/enter"
years <- 1995:2014

# Function to read and process each file
read_and_process <- function(year) {
  file_path <- file.path(base_dir, as.character(year), "res_deb.dta")
  data <- read_dta(file_path) %>%
    select(j0, j5) %>%
    mutate(year = year)
  return(data)
}

# Use map to read and process files, then combine with bind_rows
consolidated_data <- map_dfr(years, read_and_process)

# Remove duplicates and create the hh_all table
hh_all <- consolidated_data %>%
  distinct(j0, j5, year, .keep_all = TRUE) %>%
  arrange(j0, j5)
```

```{r}
# Creating a presence indicator
hh_presence <- hh_all %>%
  group_by(j0, j5) %>%
  mutate(presence = list(year)) %>%
  ungroup() %>%
  distinct(j0, j5, year, .keep_all = TRUE) %>%
  unnest(presence)

# Function to calculate attrition rate
calculate_attrition <- function(hh_current, hh_previous) {
  if (length(hh_previous) == 0) {
    return(NA)  # No attrition rate if there were no households in the previous year
  }
  attrition_rate <- length(intersect(hh_current, hh_previous)) / length(hh_previous)
  return(attrition_rate * 100)  # Convert to percentage
}

# Preparing data for attrition rate calculation
attrition_data <- hh_presence %>%
  group_by(j0, year) %>%
  summarise(households = list(j5), .groups = 'drop') %>%
  group_by(j0) %>%
  arrange(year) %>%
  mutate(households_previous = lag(households))

# Calculate attrition rates
attrition_rates <- attrition_data %>%
  rowwise() %>%
  mutate(attrition_rate = calculate_attrition(households, households_previous)) %>%
  select(j0, year, attrition_rate)
# Pivot the data to have years as columns and observatory numbers as rows
attrition_wide <- attrition_rates %>%
  pivot_wider(names_from = year, values_from = attrition_rate)


ggplot(attrition_rates, aes(x = year, y = as.factor(j0), fill = attrition_rate)) +
  geom_tile() +  # Create the heatmap tiles
  geom_text(aes(label = ifelse(is.na(attrition_rate), "", 
                               round(attrition_rate))), 
            color = "black", size = 3) +
  scale_fill_gradient(low = "blue", high = "red", na.value = "grey", name = "Attrition Rate (%)") +
  theme_minimal() +
  labs(title = "Attrition Rates by Observatory and Year",
       x = "Year",
       y = "Observatory (j0)") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```

Check

```{r}
hh_03 <- read_dta("Données ROR/enter/2003/res_deb.dta")
hh_04 <- read_dta("Données ROR/enter/2004/res_deb.dta")

hh_03_maro <- hh_03 %>%
  filter(j0 == 3)
hh_04_maro <- hh_04 %>%
  filter(j0 == 3)

hh_03_maro %>%
  mutate(in_04 = j5 %in% hh_04_maro$j5, 
         .after = j5) %>%
  group_by(in_04) %>%
  summarise(n = n())
52 / (466 + 52)


```

```{r}
hh_04 <- read_dta("Données ROR/enter/2004/res_deb.dta")
hh_05 <- read_dta("Données ROR/enter/2005/res_deb.dta")
hh_06 <- read_dta("Données ROR/enter/2006/res_deb.dta")


hh_04_maro <- hh_04 %>%
  filter(j0 == 3)
hh_05_maro <- hh_05 %>%
  filter(j0 == 3)
hh_06_maro <- hh_06 %>%
  filter(j0 == 3)

hh_03_maro %>%
  mutate(in_04 = j5 %in% hh_04_maro$j5, 
         .after = j5) %>%
  group_by(in_04) %>%
  summarise(n = n())
52 / (466 + 52)

```

Test ids indiv

```{r}
ind_95 <- read_dta("Données ROR/enter/1995/res_m.dta") 
ind_96 <- read_dta("Données ROR/enter/1996/res_m_a.dta")

ind_95_1 <- ind_95 %>%
  filter(obsr == 1)
ind_96_1 <- ind_96 %>%
  filter(obsr96 == 1)



hh_05 <- read_dta("Données ROR/enter/2005/res_deb.dta")
hh_6 <- read_dta("Données ROR/enter/2006/res_deb.dta")

```
