[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Madagascar rural observatory network data validation, preparation, and georeferencing",
    "section": "",
    "text": "Introduction\nThis document serves as a technical appendix accompanying the scientific paper tied to opening of the data collected by the Rural observatory network (ROR, for its acronym in French) from 1995 to 2014. This document provides and documents the source code of all figures and visualizations included in the publication. It also provides guidance for georeferencing this data, with a didactic tutorial that will also help users perform other type of analysis. We do so leveraging computational notebooks, specifically the Quarto format, utilizing the R programming language. This interactive setup fosters a blend of code, outcomes, explanations, and multimedia resources, ensuring that the ROR data becomes more dependable and user-friendly for other researchers. The source code developed to perform all the data processing is accessible by unfolding the code blocks, like the one below.\n\n\nCode\n# Load required libraries\nlibrary(tidyverse)    # A series of packages for data manipulation\nlibrary(haven)        # Required for reading STATA files (.dta)\nlibrary(labelled)     # To work with labelled data from STATA\nlibrary(sf)           # for spatial data handling\nlibrary(tmap)         # for mapping\nlibrary(readxl)       # Read data frames to Excel format\nlibrary(cowplot)      # to combine plots\n\n# Define a function to load and count surveys per observatory for a given year\nload_and_count &lt;- function(year, factorize = FALSE) {\n  # Define file path\n  file_path &lt;- paste0(\"data/ROR_data/\", year, \"/res_deb.dta\")\n  \n  # Load data\n  data &lt;- read_dta(file_path)\n  \n  # Extract label and convert to factors if option\n  if (factorize) {\n    data &lt;- data %&gt;%\n      mutate(across(everything(), as.character),\n             across(where(is.labelled), ~ as.character(as_factor(.))))\n  }\n  \n  # Count surveys per observatory\n  count_data &lt;- data %&gt;%\n    group_by(j0) %&gt;%\n    summarise(survey_count = n()) %&gt;%\n    ungroup() %&gt;%\n    mutate(year = year)  # Add year column\n  \n  return(count_data)\n}\n\n# Generate a list of years\nyears &lt;- 1995:2014\n\n# Use purrr::map_df to loop through each year and bind results\nobs_count &lt;- map_df(years, load_and_count) %&gt;%\n  # Remove rows with observatory \"7 \" and \"NA\", whch are errors\n  filter(j0 != 7 & !is.na(j0)) %&gt;%\n  rename(observatory = j0)\n\n# Read observatory names\nobservatory_names &lt;- readxl::read_xlsx(\"references/observatory_names.xlsx\") %&gt;%\n  select(code, observatory_name = name)\n\n# PAss it to wide.\nobs_count &lt;- obs_count %&gt;%\n  left_join(observatory_names, by = c(\"observatory\" = \"code\")) %&gt;%\n  group_by(observatory_name, year) %&gt;%\n  summarise(survey_count = sum(survey_count))\n\nobs_count_wide &lt;- obs_count %&gt;%\n  pivot_wider(names_from = year, values_from = survey_count)\n\n# Add observatory approximate location\nlocations &lt;- tibble(\n  code = c(1, 2, 3, 4, 12, 13, 15, 16, 21, 22, 23, 24, 31, 25, 41, 42, 43, 51, \n           44, 45, 61, 17, 18, 19, 71, 52),\n  name = c(\"Antalaha\", \"Antsirabe\", \"Marovoay\", \"Toliara coastal\", \"Antsohihy\", \n           \"Tsiroanomandidy\", \"Farafangana\", \"Ambovombe\", \n           \"Alaotra\", \"Manjakandriana\", \"Toliara North\", \n           \"Fenerive East\", \"Bekily\", \"Mahanoro\", \"Itasy\", \n           \"Menabe-Belo\", \"Fianarantsoa\", \"Tsivory\", \"Morondava\", \"Manandriana\", \n           \"Tanandava\", \"Ihosy\", \"Ambohimahasoa\", \"Manakara\", \"Tolanaro\", \n           \"Menabe-North-East\"),\n  latitude = c(-14.8833, -19.8659, -16.1000, -23.7574, -14.8796, -18.7713, \n               -22.8167, -25.1667, -17.8319, -18.9167, -23.2941, -17.3500, \n               -24.6900, -19.9000, -19.1686, -19.6975, -21.4527, -24.4667, \n               -20.2833, -20.2333, -22.5711, -22.4000, -20.7145, -22.1333, \n               -25.0381, -20.5486),\n  longitude = c(50.2833, 47.0333, 46.6333, 43.6770, 47.9875, 46.0546, 47.8333, \n                46.0833, 48.4167, 47.8000, 43.7761, 49.4167, 45.1700, 48.8000,\n                46.7354, 44.5419, 47.0857, 45.4667, 44.2833, 47.3833, 45.0439, \n                46.1167, 47.0389, 48.0167, 46.9562, 47.1597))\n\nobs_count &lt;- left_join(obs_count, locations, by = c(\"observatory_name\" = \"name\"))\n\n\nmadagascar &lt;- st_read(paste0(\"data/Spatial_data/OCHA_BNGRC admin boundaries/\",\n                             \"mdg_admbnda_adm0_BNGRC_OCHA_20181031.shp\"),\n                      quiet = TRUE)\n\n# Sort locations by latitude to generate sequence numbers\nlocations &lt;- locations %&gt;%\n  arrange(desc(latitude)) %&gt;%\n  mutate(seq_num = 1:n())\n\n# Create map plot with labels\nmap_plot &lt;- ggplot(data = madagascar) +\n  geom_sf(fill = \"lightgray\", colour = \"dimgrey\") +\n  geom_point(data = locations, aes(x = longitude, y = latitude, color = name), \n             size = 3) +\n  geom_text(data = locations, aes(x = longitude, y = latitude, label = seq_num), \n            vjust = -1, hjust = 1, size = 3, # check_overlap = TRUE,\n            fontface = \"bold\") + \n  theme_void() +\n  theme(legend.position = \"none\")\n\n# Add sequence numbers to observatory names in obs_count dataframe\nobs_count &lt;- obs_count %&gt;%\n  left_join(locations %&gt;%\n              select(name, seq_num), \n            by = c(\"observatory_name\" = \"name\")) %&gt;%\n  mutate(observatory_with_num = paste0(seq_num, \". \", observatory_name))\n\n# Create timeline plot using modified obs_count with observatory_with_num\ntimeline_plot &lt;- ggplot(obs_count, \n                        aes(x = year, \n                            y = fct_reorder(observatory_with_num, latitude), \n                            color = observatory_name)) +\n  geom_point(aes(size = survey_count), show.legend = F) +\n  theme_minimal() +\n  labs(y = NULL, x = NULL) +\n  theme(axis.text.y = element_text(size = 8, face = \"bold\"),\n        legend.position = \"none\")\n\n# Stitch the plots together\ncombined_plot &lt;- plot_grid(map_plot, timeline_plot, rel_widths = c(1.3, 2))\n\nggsave(\"output/ROR_history.png\", plot = combined_plot, \n       width = 10, height = 7, dpi = 300)\n\nprint(combined_plot)\n\n\n\n\n\nFigure 1: Coarse location of rural observatory and survey years\n\n\n\n\nFigure 1 is composed of two panels. The left panel shows a map of Madagascar with coloured and numbered dots corresponding to the each of the location of the 26 observatories. The right panel indicates for each number the name of the observatory and A graph on the right shows for each number. Dot colours and vertical ordering are consistent in both panels to help the reader link corresponding information."
  },
  {
    "objectID": "01-ror-data-catalogue.html",
    "href": "01-ror-data-catalogue.html",
    "title": "1  Data cataloguing",
    "section": "",
    "text": "The Rural Observatory Network (ROR) was established as part of the Madio project (1994-1999), a technical assistance program of the IRD to the national statistical institute (INSTAT) of Madagascar, as an innovative mechanism for monitoring and analyzing the country’s agricultural sector. This initiative arose from the urgent need to compile statistics on the agricultural industry due to the breakdown of the existing statistical system following the socialist era and political turmoil in the country.\nFour initial observatories were established in 1995, each representing a different set of agricultural challenges in the country’s diverse ecosystems. From 1995 to 2015, 22 other observatories were created, and existing were abandoned (see Figure 1). The ROR were supported by a variety of donors and NGOs during this period: European union, AFD, World Bank, GTZ, Swiss cooperation, Care and Rio Tinto. The selection of observation sites was based on a combination of criteria, including agroclimatic areas, dominant production systems, population density, accessibility, and the presence of support structures and development projects. These observatories aimed to provide insights into the dynamics of Malagasy agriculture, covering a range of issues such as isolated coastal communities of fishermen and livestock farmers, the impact of trade liberalization on vanilla producers, family smallholdings in the central plateau, and the restructuring of large irrigated rice-growing areas."
  },
  {
    "objectID": "03-ror-data-georeferencing.html",
    "href": "03-ror-data-georeferencing.html",
    "title": "3  Georeferencing the Rural Observatory Data",
    "section": "",
    "text": "This section details the georeferencing process applied to household panel data collected by the Rural Observatory Network (ROR) from 1995 to 2014. The ROR gathered data on various rural contexts in Madagascar. While the data quality was carefully monitored, its geolocation attributes were not fully developed, limiting its use in spatially integrated research and public policy evaluation. This appendix aligns the ROR dataset’s varied spatial denominations with a standardized geographic database, ensuring consistent correlation between each ROR observation and corresponding geospatial entities, namely communes and fokontany. Like in other sections of this document, the source code developed to perform all the data processing is accessible by unfolding the code blocks, like the one below.\n\n\nCode\nlibrary(tidyverse)    # A series of packages for data manipulation\nlibrary(haven)        # Required for reading STATA files (.dta)\nlibrary(labelled)     # To work with labelled data from STATA\nlibrary(sf)           # for spatial data handling\nlibrary(stringdist)   # for string distance and matching\nlibrary(tmap)         # for mapping\nlibrary(fuzzyjoin)    # for fuzzy joining\nlibrary(readxl)       # Read data frames to Excel format\nlibrary(writexl)      # Write data frames to Excel format\nlibrary(gt)           # for nicely formatted tables\nlibrary(cowplot)      # to combine plots\nlibrary(gtsummary)    # to produce nice summary tables\nlibrary(janitor)      # to simply add rowsums"
  }
]